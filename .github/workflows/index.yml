name: Index (cron)
permissions:
  actions: write
on:
  schedule:
    - cron: "*/15 * * * *" # Run every 15 minutes
concurrency:
  group: index
  cancel-in-progress: false
jobs:
  generate:
    name: Run generation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - name: Cache tofu binary
        uses: actions/cache@v4
        with:
          path: ./internal/moduleindex/moduleschema/testtofu
          key: tofu-binary
      - name: Build tofu
        run:
          go generate ./...
      - name: Update documentation
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_ENDPOINT_URL_S3: ${{secrets.AWS_ENDPOINT_URL_S3}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          S3_BUCKET: ${{secrets.S3_BUCKET}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run:
          go run github.com/opentofu/registry-ui/cmd/generate --log-level=trace --s3-bucket=${S3_BUCKET} --blocklist ../blocklist.json --licenses-file ../licenses.json
      - name: Update search index
        working-directory: search/pg-indexer
        env:
          PG_CONNECTION_STRING: ${{secrets.PG_CONNECTION_STRING}}
        run: go run ./
      - name: Keep Cron Alive # related to https://github.com/opentofu/registry-ui/issues/259
        uses: actions/github-script@v7
        env:
           WORKFLOW_REF: ${{ github.workflow_ref }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { WORKFLOW_REF } = process.env
            const workflowId = WORKFLOW_REF.split("@")[0].split('/').pop()
            github.rest.actions.enableWorkflow({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowId,
            })
