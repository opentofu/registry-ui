## NOTE TO DEVELOPERS: This file is manually maintained
## If you do any updates or changes to this file, please run ./convert.sh to generate
## The swagger 2.0 spec also!
openapi: 3.0.3
info:
  title: OpenTofu Registry Docs API
  description: |
    The API to fetch documentation index and documentation files from the OpenTofu registry.
    
    **API Specifications:**
    - OpenAPI 3.0: [/openapi.yml](https://api.opentofu.org/openapi.yml)
    - Swagger 2.0: [/swagger.yml](https://api.opentofu.org/swagger.yml)
  version: 1.0.0-beta
  license:
    name: MPL-2.0
    url: https://mozilla.org/MPL/2.0/
servers:
  - url: https://api.opentofu.org
    description: OpenTofu Registry API server
paths:
  /registry/docs/modules/index.json:
    get:
      operationId: GetModuleList
      summary: Get module list
      description: Returns a list of all modules
      tags:
        - Modules
      responses:
        '200':
          description: A list of all modules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleList'
  /registry/docs/modules/{namespace}/{name}/{target}/index.json:
    get:
      operationId: GetModule
      summary: Get module
      description: Returns a list of all versions of a module with metadata
      tags:
        - Modules
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the module, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the module, all lower case
          schema:
            type: string
        - name: target
          in: path
          required: true
          description: Target system of the module, all lower case
          schema:
            type: string
      responses:
        '200':
          description: A list of all versions of a module with metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
  /registry/docs/modules/{namespace}/{name}/{target}/{version}/index.json:
    get:
      operationId: GetModuleVersion
      summary: Get module version
      description: Returns the details of a specific module version
      tags:
        - Modules
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the module, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the module, all lower case
          schema:
            type: string
        - name: target
          in: path
          required: true
          description: Target system of the module, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the module with the "v" prefix
          schema:
            type: string
      responses:
        '200':
          description: The details of a specific module version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModuleVersion'
  /registry/docs/modules/{namespace}/{name}/{target}/{version}/README.md:
    get:
      operationId: GetModuleReadme
      summary: Get module readme
      description: Returns the readme of a module
      tags:
        - Modules
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the module, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the module, all lower case
          schema:
            type: string
        - name: target
          in: path
          required: true
          description: Target system of the module, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the module with the "v" prefix
          schema:
            type: string
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/modules/{namespace}/{name}/{target}/{version}/modules/{submodule}/README.md:
    get:
      operationId: GetSubmoduleReadme
      summary: Get submodule readme
      description: Returns the readme of a submodule
      tags:
        - Modules
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the module, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the module, all lower case
          schema:
            type: string
        - name: target
          in: path
          required: true
          description: Target system of the module, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the module with the "v" prefix
          schema:
            type: string
        - name: submodule
          in: path
          required: true
          description: Submodule name
          schema:
            type: string
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/modules/{namespace}/{name}/{target}/{version}/examples/{example}/README.md:
    get:
      operationId: GetModuleExampleReadme
      summary: Get module example readme
      description: Returns the readme of a module example
      tags:
        - Modules
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the module, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the module, all lower case
          schema:
            type: string
        - name: target
          in: path
          required: true
          description: Target system of the module, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the module with the "v" prefix
          schema:
            type: string
        - name: example
          in: path
          required: true
          description: Example name
          schema:
            type: string
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/providers/index.json:
    get:
      operationId: GetProviderList
      summary: Get provider list
      description: Returns a list of all providers
      tags:
        - Providers
      responses:
        '200':
          description: A list of all providers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderList'
  /registry/docs/providers/{namespace}/{name}/index.json:
    get:
      operationId: GetProvider
      summary: Get provider
      description: Returns a list of all versions of a provider with metadata
      tags:
        - Providers
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the provider, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the provider, all lower case
          schema:
            type: string
      responses:
        '200':
          description: A list of all versions of a provider with metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Provider'
  /registry/docs/providers/{namespace}/{name}/{version}/index.json:
    get:
      operationId: GetProviderVersion
      summary: Get provider version
      description: Returns the details of a specific provider version
      tags:
        - Providers
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the provider, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the provider, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the provider with the "v" prefix
          schema:
            type: string
      responses:
        '200':
          description: The details of a specific provider version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderVersion'
  /registry/docs/providers/{namespace}/{name}/{version}/index.md:
    get:
      operationId: GetProviderDoc
      summary: Get provider documentation
      description: Returns a root provider document if it exists
      tags:
        - Providers
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the provider, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the provider, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the provider with the "v" prefix
          schema:
            type: string
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/providers/{namespace}/{name}/{version}/{kind}s/{document}.md:
    get:
      operationId: GetProviderDocItem
      summary: Get provider document item
      description: Returns a provider document
      tags:
        - Providers
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the provider, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the provider, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the provider with the "v" prefix
          schema:
            type: string
        - name: kind
          in: path
          required: true
          description: The kind of document to fetch
          schema:
            type: string
            enum: [resource, datasource, function, guide]
        - name: document
          in: path
          required: true
          description: The name of the document without the .md suffix
          schema:
            type: string
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/providers/{namespace}/{name}/{version}/cdktf/{language}/index.md:
    get:
      operationId: GetProviderCDKTFDoc
      summary: Get provider CDKTF documentation
      description: Returns a CDKTF root document
      tags:
        - Providers
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the provider, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the provider, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the provider with the "v" prefix
          schema:
            type: string
        - name: language
          in: path
          required: true
          description: The CDKTF language to fetch
          schema:
            type: string
            enum: [typescript, python, go, csharp, java]
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/providers/{namespace}/{name}/{version}/cdktf/{language}/{kind}s/{document}.md:
    get:
      operationId: GetProviderCDKTFDocItem
      summary: Get provider CDKTF document item
      description: Returns a CDKTF document item
      tags:
        - Providers
      parameters:
        - name: namespace
          in: path
          required: true
          description: Namespace of the provider, all lower case
          schema:
            type: string
        - name: name
          in: path
          required: true
          description: Name of the provider, all lower case
          schema:
            type: string
        - name: version
          in: path
          required: true
          description: Version number of the provider with the "v" prefix
          schema:
            type: string
        - name: language
          in: path
          required: true
          description: The CDKTF language to fetch
          schema:
            type: string
            enum: [typescript, python, go, csharp, java]
        - name: kind
          in: path
          required: true
          description: The kind of document to fetch
          schema:
            type: string
            enum: [resource, datasource, function, guide]
        - name: document
          in: path
          required: true
          description: The name of the document without the .md suffix
          schema:
            type: string
      responses:
        '200':
          description: The contents of the document
          content:
            text/markdown:
              schema:
                type: string
  /registry/docs/search:
    get:
      operationId: Search
      summary: Search
      description: Returns a list of search results matching the query
      tags:
        - Search
      parameters:
        - name: q
          in: query
          required: true
          description: The search query string. This should be a URL encoded string
          schema:
            type: string
      responses:
        '200':
          description: A list of search results matching the query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SearchResultItem'
        '400':
          description: Invalid search query
  /top/providers:
    get:
      operationId: GetTopProviders
      summary: Get top providers
      description: Returns a list of the top providers ordered by popularity
      tags:
        - Search
      parameters:
        - name: limit
          in: query
          required: true
          description: The maximum number of providers to return (must be between 1 and 500)
          schema:
            type: integer
            minimum: 1
            maximum: 500
      responses:
        '200':
          description: A list of top providers ordered by popularity
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TopProviderItem'
        '400':
          description: Invalid limit parameter
components:
  schemas:
    ModuleList:
      type: object
      required:
        - modules
      properties:
        modules:
          type: array
          items:
            $ref: '#/components/schemas/Module'
    Module:
      type: object
      required:
        - addr
        - description
        - versions
        - is_blocked
        - popularity
        - fork_count
      properties:
        addr:
          $ref: '#/components/schemas/ModuleAddr'
        blocked_reason:
          type: string
        description:
          type: string
        fork_count:
          type: integer
          format: int64
          description: ForkCount indicates how many forks this provider has
        fork_of:
          $ref: '#/components/schemas/ModuleAddr'
        fork_of_link:
          type: string
          description: ForkOfLink may contain a link to a repository this provider is forked from
        is_blocked:
          type: boolean
        popularity:
          type: integer
          format: int64
          description: Popularity indicates how popular the underlying repository is in the VCS system
        upstream_fork_count:
          type: integer
          format: int64
          description: UpstreamForkCount contains the number of forks of the upstream repository
        upstream_popularity:
          type: integer
          format: int64
          description: UpstreamPopularity contains the popularity of the original repository this repository is forked of
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ModuleVersionDescriptor'
    ModuleAddr:
      type: object
      required:
        - display
        - namespace
        - name
        - target
      properties:
        display:
          type: string
          description: Contains the display version of the addr presentable to the end user. This may be capitalized.
        name:
          type: string
          description: Contains the name of the addr
        namespace:
          type: string
          description: Contains the namespace of the addr
        target:
          type: string
          description: Contains the target system of the addr
      description: ModuleAddr describes a module address enriched with data for the API
    ModuleVersion:
      type: object
      required:
        - id
        - published
        - readme
        - variables
        - outputs
        - schema_error
        - providers
        - dependencies
        - resources
        - vcs_repository
        - licenses
        - incompatible_license
        - examples
        - submodules
      properties:
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ModuleDependency'
        edit_link:
          type: string
        examples:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ModuleExample'
          description: Examples lists all examples for this version
        id:
          $ref: '#/components/schemas/ModuleVersionNumber'
        incompatible_license:
          type: boolean
          description: IncompatibleLicense indicates that there are no licenses or there is one or more license that are not approved
        licenses:
          $ref: '#/components/schemas/LicenseList'
        link:
          type: string
          description: Link holds the link to the repository browse URL
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Output'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDependency'
        published:
          type: string
          format: date-time
        readme:
          type: boolean
          description: Readme indicates that the submodule has a readme available
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        schema_error:
          type: string
          description: SchemaError contains an error message to show why the schema is not available. This should be shown to the user as a warning message
        submodules:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Submodule'
          description: Submodules lists all submodules of this version
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variable'
        vcs_repository:
          type: string
          description: VCSRepository holds the URL to the versioning system for this repository
    ModuleVersionDescriptor:
      type: object
      required:
        - id
        - published
      properties:
        id:
          $ref: '#/components/schemas/ModuleVersionNumber'
        published:
          type: string
          format: date-time
      title: ModuleVersionDescriptor describes a single version
    ModuleVersionNumber:
      type: string
      description: VersionNumber describes the semver version number. Note that in contrast to provider versions module versions do not have a compulsory "v" prefix
    ModuleDependency:
      type: object
      required:
        - name
        - version_constraint
        - source
      properties:
        name:
          type: string
        source:
          type: string
        version_constraint:
          type: string
      title: ModuleDependency describes a module call as a dependency as the UI expects it
    ModuleExample:
      type: object
      required:
        - readme
        - variables
        - outputs
        - schema_error
      properties:
        edit_link:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Output'
        readme:
          type: boolean
          description: Readme indicates that the submodule has a readme available
        schema_error:
          type: string
          description: SchemaError contains an error message to show why the schema is not available. This should be shown to the user as a warning message
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variable'
      description: Example describes a single example for a Documentation. You can query the files and the readme using the corresponding API
    Output:
      type: object
      required:
        - sensitive
        - description
      properties:
        description:
          type: string
        sensitive:
          type: boolean
      title: Output describes a module output as the UI expects it
    Variable:
      type: object
      required:
        - type
        - default
        - description
        - sensitive
        - required
      properties:
        default: {}
        description:
          type: string
        required:
          type: boolean
        sensitive:
          type: boolean
        type:
          type: string
      title: Variable describes a variable as the UI expects it
    Resource:
      type: object
      required:
        - address
        - type
        - name
      properties:
        address:
          type: string
        name:
          type: string
        type:
          type: string
      title: Resource describes a resource a module uses as the UI expects it
    Submodule:
      type: object
      required:
        - readme
        - variables
        - outputs
        - schema_error
        - providers
        - dependencies
        - resources
      properties:
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ModuleDependency'
        edit_link:
          type: string
        outputs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Output'
        providers:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDependency'
        readme:
          type: boolean
          description: Readme indicates that the submodule has a readme available
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        schema_error:
          type: string
          description: SchemaError contains an error message to show why the schema is not available. This should be shown to the user as a warning message
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Variable'
      title: Submodule describes a submodule within a module
    ProviderList:
      type: object
      required:
        - providers
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/Provider'
          description: Providers holds the list of providers
      title: ProviderList is a list of providers
    Provider:
      type: object
      required:
        - addr
        - description
        - popularity
        - fork_count
        - versions
        - is_blocked
      properties:
        addr:
          $ref: '#/components/schemas/ProviderAddr'
        blocked_reason:
          type: string
        canonical_addr:
          $ref: '#/components/schemas/ProviderAddr'
        description:
          type: string
          description: Description is the extracted description for the provider. This may be empty
        fork_count:
          type: integer
          format: int64
          description: ForkCount indicates how many forks this provider has
        fork_of:
          $ref: '#/components/schemas/ProviderAddr'
        fork_of_link:
          type: string
          description: ForkOfLink may contain a link to a repository this provider is forked from
        is_blocked:
          type: boolean
        link:
          type: string
          description: Link contains the link to the repository this provider was built from. Note that this may not match the Addr field since the repository may be different
        popularity:
          type: integer
          format: int64
          description: Popularity indicates how popular the underlying repository is in the VCS system
        reverse_aliases:
          type: array
          items:
            $ref: '#/components/schemas/ProviderAddr'
          description: ReverseAliases contains a list of providers that are aliases of the current one. This field is the inverse of CanonicalAddr
        upstream_fork_count:
          type: integer
          format: int64
          description: UpstreamForkCount contains the number of forks of the upstream repository
        upstream_popularity:
          type: integer
          format: int64
          description: UpstreamPopularity contains the popularity of the original repository this repository is forked of
        versions:
          type: array
          items:
            $ref: '#/components/schemas/ProviderVersionDescriptor'
          description: Versions holds the list of versions this provider supports
        warnings:
          type: array
          items:
            type: string
          description: Warnings contains a list of warning strings issued to the OpenTofu client when fetching the provider info
      title: Provider is a single provider with all its versions
    ProviderAddr:
      type: object
      required:
        - display
        - namespace
        - name
      properties:
        display:
          type: string
          description: Display contains the user-readable display variant of this addr. This may be capitalized
        name:
          type: string
          description: Name contains the lower-case name part of the addr
        namespace:
          type: string
          description: Namespace contains the lower-case namespace part of the addr
      title: ProviderAddr is an enriched model of provider.Addr with display properties for the frontend
    ProviderVersion:
      type: object
      required:
        - id
        - published
        - docs
        - cdktf_docs
        - license
        - incompatible_license
      properties:
        cdktf_docs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProviderDocs'
        docs:
          $ref: '#/components/schemas/ProviderDocs'
        id:
          $ref: '#/components/schemas/ProviderVersionNumber'
        incompatible_license:
          type: boolean
          description: IncompatibleLicense indicates that there are no licenses or there is one or more license that are not approved
        license:
          $ref: '#/components/schemas/LicenseList'
        link:
          type: string
        published:
          type: string
          format: date-time
      title: ProviderVersion describes a single provider version
    ProviderVersionDescriptor:
      type: object
      required:
        - id
        - published
      properties:
        id:
          $ref: '#/components/schemas/ProviderVersionNumber'
        published:
          type: string
          format: date-time
      title: ProviderVersionDescriptor describes a provider version
    ProviderVersionNumber:
      type: string
      title: VersionNumber describes the semver version number
    ProviderDocs:
      type: object
      required:
        - resources
        - datasources
        - functions
        - guides
      properties:
        datasources:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDocItem'
        functions:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDocItem'
        guides:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDocItem'
        index:
          $ref: '#/components/schemas/ProviderDocItem'
        resources:
          type: array
          items:
            $ref: '#/components/schemas/ProviderDocItem'
      title: ProviderDocs describes either a provider or a CDKTF language
    ProviderDocItem:
      type: object
      properties:
        description:
          type: string
        edit_link:
          type: string
        name:
          $ref: '#/components/schemas/DocItemName'
        subcategory:
          type: string
        title:
          type: string
      title: ProviderDocItem describes a single documentation item
    ProviderDependency:
      type: object
      required:
        - alias
        - name
        - full_name
        - version_constraint
      properties:
        alias:
          type: string
        full_name:
          type: string
        name:
          type: string
        version_constraint:
          type: string
      title: ProviderDependency describes a provider dependency of a module
    DocItemName:
      type: string
    LicenseList:
      type: array
      items:
        $ref: '#/components/schemas/License'
      title: List is a list of licenses found in a repository
    License:
      type: object
      required:
        - spdx
        - confidence
        - is_compatible
        - file
      properties:
        confidence:
          type: number
          format: float
          description: Confidence indicates how accurate the license detection is
        file:
          type: string
          description: File holds the file in the repository where the license was detected
        is_compatible:
          type: boolean
          description: IsCompatible signals if the license is compatible with the OpenTofu project
        link:
          type: string
          description: Link may contain a link to the license file for humans to view. This may be empty
        spdx:
          type: string
          description: SPDX is the SPDX identifier for the license
      description: License describes a license found in a repository. Note the license detection is best effort
    SearchResultItem:
      type: object
      required:
        - id
        - last_updated
        - type
        - addr
        - version
        - title
        - description
        - link_variables
        - term_match_count
        - rank
      properties:
        addr:
          type: string
          description: The address of the module or provider
        description:
          type: string
          description: A brief description of the result item
        id:
          type: string
          description: The unique identifier for the result item
        last_updated:
          type: string
          description: The last updated timestamp for the result item
        link_variables:
          type: object
          additionalProperties:
            type: string
          description: A map of variables used to generate the link for the result item
        rank:
          type: integer
          format: int32
          description: The rank of the result in the search results
        term_match_count:
          type: string
          description: The number of times the search term matched in this result
        title:
          type: string
          description: The title of the result item
        type:
          type: string
          description: The type of the result item (e.g., module, provider, datasource etc)
        version:
          type: string
          description: The version of the module or provider
      title: SearchResultItem describes a single search result item
    TopProviderItem:
      type: object
      required:
        - addr
        - version
        - popularity
      properties:
        addr:
          type: string
          description: The address of the provider
        version:
          type: string
          description: The version of the provider
        popularity:
          type: integer
          format: int64
          description: The popularity score of the provider based on repository stars or similar metrics
      title: TopProviderItem describes a provider in the top providers list